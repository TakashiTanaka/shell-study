#! /bin/bash
# while getopts abc OPT; do
# 	case $OPT in
# 	a) echo "[-a]が指定された" ;;
# 	b) echo "[-b]が指定された" ;;
# 	c) echo "[-c]が指定された" ;;
# 	*) echo "該当なし" ;;
# 	esac
# done

# :abcのようにオプションの最初に:をつけることでエラーメッセージを表示させない
# OPTARGには現在解析しようとしている文字列が格納されている
# while getopts :abc OPT; do
# 	case $OPT in
# 	a) echo "[-a]が指定された" ;;
# 	b) echo "[-b]が指定された" ;;
# 	c) echo "[-c]が指定された" ;;
# 	*) echo "${OPTARG}は定義されていないよ" ;;
# 	esac
# done

# 引数付きのオプションを指定
# オプション文字の後に:記号をつける
# 下記の場合だとaとcは引数が必須のオプションとなる
# 引数が必要なオプションに引数が指定されていなかったら解析結果として:という文字を保存する
# 定義されていないオプションの場合は?という文字を保存する
# 「./test.sh -a -b -c 引数」とすると-bがオプションとしてではなく、-aの引数として解釈されてしまうので、
# 複雑なオプション指定が必要な場合は他の方法でなんとかするしかない
while getopts :a:bc: OPT; do
	case $OPT in
	a) echo "[-a]が指定された（引数=${OPTARG}）" ;;
	b) echo "[-b]が指定された（引数=${OPTARG}）" ;;
	c) echo "[-c]が指定された（引数=${OPTARG}）" ;;
	:) echo "${OPTARG}に引数が指定されていないよ" ;;
	?) echo "${OPTARG}は定義されていないよ" ;;
	esac
done
